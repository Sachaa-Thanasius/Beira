[project]
name = "Beira"
description = "An personal Discord bot."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [{ name = "Sachaa-Thanasius", email = "i.like.ike101@gmail.com" }]

[project.urls]
"Homepage" = "https://github.com/Sachaa-Thanasius/Beira"
"Bug Tracker" = "https://github.com/Sachaa-Thanasius/Beira/issues"

[tool.ruff]
line-length = 120
target-version = "py310"
select = [
    "F", "E", "I", "UP", "YTT", "ANN", "S", "BLE", "B", "A", "COM", "C4", "DTZ",
    "EM", "ISC", "G", "INP", "PIE", "T20", "Q003", "RSE", "RET", "SIM", "TID", "PTH", 
    "ERA", "PD", "PLC", "PLE", "PLR", "PLW", "TRY", "NPY", "RUF"
]
ignore = [
    "G002",  # Erroneous issue with %-logging when logging can be configured for % logging.
    "S101",  # Use of assert here is a known quantity. Blame typing memes.
    "PLR2004",  # Magic value comparison. May remove later.
    "SIM105",  # Suppressable exception. I'm not paying the overhead of contextlib.supress for stylistic choices.
    "C90",  # McCabe complexity memes.
    "ANN204",  # Special method return types.
    "ANN101",  # Python310 doesn't have Self in typing. I'm not importing typing_extensions everywhere.
    "ANN102",  # See note for ANN102.
    "PD011",  # Erroneous issue that triggers for any .values attribute access at all.
    "TRY002",  # Use of Exception. To be removed later when I narrow down exception types.
    "S311",  # No need for cryptographically secure random number generation in this use case.
    "ANN401",  # Not sure how else to type *args and **kwargs when they could be anything.
    # "PLR0913"  # Seems excessive to point out number of function call arguments in most cases here.
]
unfixable = [
    "ERA",  # I don't want anything erroneously detected deleted by this.
    "PLC0414",  # This causes issues when declaring module imports in __init__ files. Disallow erroneous deletion.
]

[tool.ruff.isort]
lines-after-imports = 2
combine-as-imports = true

[tool.pyright]
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedImport = "error"
pythonVersion = "3.10"
typeCheckingMode = "basic"