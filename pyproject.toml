[project]
name = "Beira"
version = "0.0.1"
description = "An personal Discord bot made in Python."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "Sachaa-Thanasius", email = "111999343+Sachaa-Thanasius@users.noreply.github.com" },
]

[project.urls]
Homepage = "https://github.com/Sachaa-Thanasius/Beira"

[tool.ruff]
include = ["main.py", "core/*", "exts/*", "**/pyproject.toml"]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PD",
    "PL",
    "TRY",
    "NPY",
    "RUF",
]
extend-ignore = [
    "S101", # Use of assert here is a known quantity. Blame typing memes.
    # "PLR2004", # Magic value comparison. May remove later.
    "SIM105", # Suppressable exception. I'm not paying the overhead of contextlib.suppress for stylistic choices.
    "C90",    # McCabe complexity memes.
    "PD011",  # Erroneous issue that triggers for any .values attribute access at all.
    "S311",   # No need for cryptographically secure random number generation in this use case.
    "ANN101", # Type of self is implicit.
    "ANN102", # Type of cls is implicit.
    "ANN204", # Special method return types are known by type checker.
    "ANN401", # Not sure how else to type *args and **kwargs when they could be anything.
    "PLR",    # Complexity things.
    "PYI036", # Bug with annotations for __exit__.
    # Recommended by Ruff when using Ruff format.
    "E111",
    "E114",
    "E117",
    "Q003",
    "COM812",
    "COM819",
    # "E501",
    "ISC001",
    "ISC002",
]
unfixable = [
    "ERA", # Disallow erroneous detection into deletion.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403", "PLC0414"] # Star import usually throws these.
"misc/**" = [
    "T201",   # Leave prints alone.
    "ERA001", # Leave commented code alone.
]

[tool.ruff.lint.isort]
lines-after-imports = 2
combine-as-imports = true

[tool.pyright]
include = ["main.py", "core", "exts"]
pythonVersion = "3.10"
typeCheckingMode = "strict"

# reportImportCycles = "warning"
reportPropertyTypeMismatch = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
